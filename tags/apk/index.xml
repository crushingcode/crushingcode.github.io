<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apk on Crushing C.O.D.E</title>
    <link>http://crushingcode.github.io/tags/apk/</link>
    <description>Recent content in Apk on Crushing C.O.D.E</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - Nishant Srivastava</copyright>
    <lastBuildDate>Fri, 14 Oct 2016 10:54:24 +0200</lastBuildDate>
    
	<atom:link href="http://crushingcode.github.io/tags/apk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Do you like to ADB?</title>
      <link>http://crushingcode.github.io/do-you-like-to-adb/</link>
      <pubDate>Fri, 14 Oct 2016 10:54:24 +0200</pubDate>
      
      <guid>http://crushingcode.github.io/do-you-like-to-adb/</guid>
      <description>Lets face it we all have been there , trying to fiddle with managing our emulators and dev devices. And at max we would do is try to manually manage it. Let me make this clear I am not talking about tests here as that&amp;rsquo;s all related to the code. My focus here is on managing the device/emulator that&amp;rsquo;s paired with your dev environment/system (..and to your IDE - Android Studio , if you still use Eclipse you are simply oblivious to the joys of coding in Android [here is a long blank stare from me to you] ).</description>
    </item>
    
    <item>
      <title>Whats in the APK?</title>
      <link>http://crushingcode.github.io/whats-in-the-apk/</link>
      <pubDate>Sat, 24 Sep 2016 10:54:24 +0200</pubDate>
      
      <guid>http://crushingcode.github.io/whats-in-the-apk/</guid>
      <description>If I give you the code of an android app and ask you to provide me information regarding the android app like minSdkVersion, targetSdkVersion, permissions, configurations, almost anyone who knows how to code an android app would provide it to me in a few minutes. But what if I gave you an android apk file and then ask you to answer for the same ðŸ¤” Its tricky if you try to think at the very first instance.</description>
    </item>
    
  </channel>
</rss>