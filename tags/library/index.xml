<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Library on Crushing C.O.D.E</title>
    <link>http://crushingcode.github.io/tags/library/</link>
    <description>Recent content in Library on Crushing C.O.D.E</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2017</copyright>
    <lastBuildDate>Sun, 05 Mar 2017 10:54:24 +0200</lastBuildDate>
    
	<atom:link href="http://crushingcode.github.io/tags/library/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Things I wish I knew when I started building Android SDK/Libraries</title>
      <link>http://crushingcode.github.io/things-i-wish-i-knew-when-i-started-building-android-sdk-libraries/</link>
      <pubDate>Sun, 05 Mar 2017 10:54:24 +0200</pubDate>
      
      <guid>http://crushingcode.github.io/things-i-wish-i-knew-when-i-started-building-android-sdk-libraries/</guid>
      <description>It all starts when some android developer tries to figure out a solution to a problem he/she is having while building their &amp;ldquo;Awesome Android App&amp;rdquo;. During the process, most developers would encounter a couple of issues and in tandem, to those, they would come up with possible solutions.
Now here is a thing, if you are like me, who believes that if the problem was big enough for me to spend some time on it and there wasnâ€™t an existing solution out there, I would abstract the whole solution in a modular manner, which eventually turns out to be an android library.</description>
    </item>
    
    <item>
      <title>I could not find a simple Gesture Detection android library, so I built one</title>
      <link>http://crushingcode.github.io/i-could-not-find-a-simple-gesture-detection-android-library-so-i-built-one/</link>
      <pubDate>Sun, 12 Feb 2017 10:54:24 +0200</pubDate>
      
      <guid>http://crushingcode.github.io/i-could-not-find-a-simple-gesture-detection-android-library-so-i-built-one/</guid>
      <description>While working on various projects, there have been times when I have had to implement various gesture-based events. Every time I have had to do that I had to write the whole code for getting the SensorManager and getting access to the SensorEvent, plus the extra logic to detect the gesture. At first, it was just fine to do that since I was a beginner around that time. Then soon I got weary of the whole boilerplate.</description>
    </item>
    
    <item>
      <title>Guide to publishing your Android Library via JitPack</title>
      <link>http://crushingcode.github.io/publish-your-android-library-via-jitpack/</link>
      <pubDate>Fri, 29 Jul 2016 10:54:24 +0200</pubDate>
      
      <guid>http://crushingcode.github.io/publish-your-android-library-via-jitpack/</guid>
      <description>Ok so you already know how to build your android library and publish it to JCenter/MavenCentral. This post is third in parts of a series.
P.S. : If you dont know how to , go ahead and have a look
 Guide to publishing your Android Library via Jcenter/Bintray Guide to publishing your Android Library via MavenCentral Guide to publishing your Android Library via JitPack  The very first question that people would have is</description>
    </item>
    
    <item>
      <title>Guide to publishing your Android Library via MavenCentral</title>
      <link>http://crushingcode.github.io/publish-your-android-library-via-mavencentral/</link>
      <pubDate>Sun, 17 Jul 2016 10:54:24 +0200</pubDate>
      
      <guid>http://crushingcode.github.io/publish-your-android-library-via-mavencentral/</guid>
      <description>If you come from the java world, you would already be knowing about MavenCentral in a big way. MavenCentral is the central repository which hosts all the maven artifacts and one can reference them from anywhere in the world. Android artifacts can also be hosted on MavenCentral in a similar manner. Here I am going to document the process to publish an android library to MavenCentral, as I followed it.</description>
    </item>
    
    <item>
      <title>Guide to publishing your Android Library via Jcenter/Bintray</title>
      <link>http://crushingcode.github.io/publish-your-android-library-via-jcenter/</link>
      <pubDate>Tue, 12 Jul 2016 10:54:24 +0200</pubDate>
      
      <guid>http://crushingcode.github.io/publish-your-android-library-via-jcenter/</guid>
      <description>Developers are a different kind of people altogether. They tend to be lazy but strive to be super efficient at the same time. A lot of this can be seen in the Android world where a certain library pops up everyday to solve a specific problem or to make the complex processes simpler.
I have a certain knack for re-using code blocks just to avoid repeative tasks and to facilitate this I usually end up converting those codeblocks into an android library.</description>
    </item>
    
  </channel>
</rss>